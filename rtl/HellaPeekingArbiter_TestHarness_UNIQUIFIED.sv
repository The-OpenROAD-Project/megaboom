// Generated by CIRCT firtool-1.53.0
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module HellaPeekingArbiter_TestHarness_UNIQUIFIED(
  input         clock,
                reset,
                io_in_0_bits_last,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_in_1_valid,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  input  [2:0]  io_in_1_bits_opcode,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_in_1_bits_param,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  input  [7:0]  io_in_1_bits_size,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_in_1_bits_source,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  input  [63:0] io_in_1_bits_data,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  input         io_in_1_bits_corrupt,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  input  [8:0]  io_in_1_bits_union,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  input         io_in_1_bits_last,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_in_2_bits_last,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_in_3_bits_last,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_in_4_valid,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  input  [2:0]  io_in_4_bits_opcode,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_in_4_bits_param,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  input  [7:0]  io_in_4_bits_size,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_in_4_bits_source,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  input  [63:0] io_in_4_bits_address,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_in_4_bits_data,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  input         io_in_4_bits_corrupt,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  input  [8:0]  io_in_4_bits_union,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  input         io_in_4_bits_last,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_out_ready,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  output        io_in_1_ready,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_in_4_ready,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_out_valid,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  output [2:0]  io_out_bits_chanId,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_out_bits_opcode,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_out_bits_param,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  output [7:0]  io_out_bits_size,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_out_bits_source,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  output [63:0] io_out_bits_address,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
                io_out_bits_data,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  output        io_out_bits_corrupt,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  output [8:0]  io_out_bits_union,	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
  output        io_out_bits_last	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
);

  reg  [2:0] lockIdx;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:26:24]
  reg        locked;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:27:23]
  wire [2:0] chosen = locked ? lockIdx : io_in_1_valid ? 3'h1 : 3'h4;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :26:24, :27:23, :37:19, src/main/scala/chisel3/util/Mux.scala:50:70]
  wire       _GEN = chosen == 3'h1;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :37:19, :43:16]
  wire       _GEN_0 = chosen == 3'h2;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :37:19, :43:16]
  wire       _GEN_1 = chosen == 3'h3;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :37:19, :43:16]
  wire       _GEN_2 = _GEN_1 | _GEN_0;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:43:16]
  wire       _GEN_3 = chosen == 3'h4;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :37:19, :43:16, src/main/scala/chisel3/util/Mux.scala:50:70]
  wire       _io_out_valid_output = _GEN_3 ? io_in_4_valid : ~_GEN_2 & _GEN & io_in_1_valid;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:43:16]
  wire       _GEN_4 = _GEN_2 | ~_GEN;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:43:16, :44:15]
  wire       _io_out_bits_last_output = _GEN_3 ? io_in_4_bits_last : _GEN_1 ? io_in_3_bits_last : _GEN_0 ? io_in_2_bits_last : _GEN ? io_in_1_bits_last : io_in_0_bits_last;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:43:16, :44:15]
  wire       _GEN_5 = io_out_ready & _io_out_valid_output;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:43:16, src/main/scala/chisel3/util/Decoupled.scala:52:35]
  always @(posedge clock) begin
    if (reset) begin
      lockIdx <= 3'h0;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :26:24]
      locked <= 1'h0;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:27:23]
    end
    else begin
      if (_GEN_5 & ~locked) begin	// @[61:15:26:24, generators/rocket-chip/src/main/scala/util/Arbiters.scala:27:23, :60:{11,50}, generators/rocket-chip/src/main/scala/util/Arbiters.scala 59:22:26:24, src/main/scala/chisel3/util/Decoupled.scala:52:35]
        if (io_in_1_valid)	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
          lockIdx <= 3'h1;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :26:24]
        else	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14]
          lockIdx <= 3'h4;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :26:24, src/main/scala/chisel3/util/Mux.scala:50:70]
      end
      if (_GEN_5)	// @[src/main/scala/chisel3/util/Decoupled.scala:52:35]
        locked <= ~_io_out_bits_last_output;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:27:23, :44:15, generators/rocket-chip/src/main/scala/util/Arbiters.scala 65:35:66:14]
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;
        lockIdx = _RANDOM[/*Zero width*/ 1'b0][2:0];	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:26:24]
        locked = _RANDOM[/*Zero width*/ 1'b0][3];	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:26:24, :27:23]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_in_1_ready = io_out_ready & chosen == 3'h1;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :37:19, :40:{36,46}]
  assign io_in_4_ready = io_out_ready & chosen == 3'h4;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :37:19, :40:{36,46}, src/main/scala/chisel3/util/Mux.scala:50:70]
  assign io_out_valid = _io_out_valid_output;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:43:16]
  assign io_out_bits_chanId = _GEN_3 ? 3'h0 : _GEN_1 ? 3'h1 : _GEN_0 ? 3'h2 : _GEN ? 3'h3 : 3'h4;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :43:16, :44:15, src/main/scala/chisel3/util/Mux.scala:50:70]
  assign io_out_bits_opcode = _GEN_3 ? io_in_4_bits_opcode : _GEN_4 ? 3'h0 : io_in_1_bits_opcode;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :43:16, :44:15]
  assign io_out_bits_param = _GEN_3 ? io_in_4_bits_param : _GEN_4 ? 3'h0 : io_in_1_bits_param;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :43:16, :44:15]
  assign io_out_bits_size = _GEN_3 ? io_in_4_bits_size : _GEN_4 ? 8'h0 : io_in_1_bits_size;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :43:16, :44:15]
  assign io_out_bits_source = _GEN_3 ? io_in_4_bits_source : _GEN_4 ? 8'h0 : io_in_1_bits_source;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :43:16, :44:15]
  assign io_out_bits_address = _GEN_3 ? io_in_4_bits_address : 64'h0;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :43:16, :44:15]
  assign io_out_bits_data = _GEN_3 ? io_in_4_bits_data : _GEN_4 ? 64'h0 : io_in_1_bits_data;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :43:16, :44:15]
  assign io_out_bits_corrupt = _GEN_3 ? io_in_4_bits_corrupt : ~_GEN_2 & _GEN & io_in_1_bits_corrupt;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:43:16, :44:15]
  assign io_out_bits_union = _GEN_3 ? io_in_4_bits_union : _GEN_4 ? 9'h0 : io_in_1_bits_union;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:14:14, :43:16, :44:15]
  assign io_out_bits_last = _io_out_bits_last_output;	// @[generators/rocket-chip/src/main/scala/util/Arbiters.scala:44:15]
endmodule

